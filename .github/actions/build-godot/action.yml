name: 'Build Godot'
description: 'Build a Godot application for Windows, macOS, and Linux'

inputs:
  app-name:
    description: 'The name of the application'
    required: true
    default: 'Application'
  build-dir:
    description: 'The chosen build directory'
    required: true
    default: 'build'
  godot-version:
    description: 'The version of Godot to build with'
    required: true
    default: 0.0
  godot-executable:
    description: 'The path to the Godot executable'
    required: false
    default: /Applications/Godot.app/Contents/MacOS/Godot

runs:
  using: 'composite'
  steps:
    - name: Checkout current branch
      uses: actions/checkout@v3
    
    - name: Setup Godot
      shell: bash
      run: |
        curl -o ./godot.zip "https://downloads.tuxfamily.org/godotengine/${{ inputs.godot-version }}/Godot_v${{ inputs.godot-version }}-stable_macos.universal.zip"
        unzip ./godot.zip
        mv ./Godot.app /Applications/Godot.app

    - name: Setup Godot templates
      shell: bash
      env:
        GODOT_TEMPLATES_DIR: '/Users/runner/Library/Application Support/Godot/export_templates'
      run: |
        curl -o ./godot-templates.zip "https://downloads.tuxfamily.org/godotengine/${{ inputs.godot-version }}/Godot_v${{ inputs.godot-version }}-stable_export_templates.tpz"
        unzip ./godot-templates.zip
        mkdir -p "$GODOT_TEMPLATES_DIR"
        mv ./templates "$GODOT_TEMPLATES_DIR/${{ inputs.godot-version }}.stable"

    - name: Open Godot editor for reimport
      shell: bash
      run: ${{ inputs.godot-executable }} --editor --headless --quit || true

    - name: Apply version to export information
      shell: bash
      run: ${{ inputs.godot-executable }} --script scripts/apply_version.gd --headless
      
    - name: Build macOS application
      shell: bash
      run: |
        mkdir -p ${{ inputs.build-dir }}/macos
        ${{ inputs.godot-executable }} --export-debug macOS --headless
        [ "$(ls -A ${{ inputs.build-dir }}/macos)" ]

    - name: Compress macOS build (to preserve permissions)
      shell: bash
      run: tar -cvf ${{ inputs.build-dir }}/macos/macos.tar -C ${{ inputs.build-dir }}/macos ${{ inputs.app-name }}.app
    
    - uses: actions/upload-artifact@v3
      with:
        name: macos
        path: ${{ inputs.build-dir }}/macos/macos.tar

    - name: Build Windows application
      shell: bash
      run: |
        mkdir -p ${{ inputs.build-dir }}/windows
        ${{ inputs.godot-executable }} --export-debug Windows --headless
        [ "$(ls -A ${{ inputs.build-dir }}/windows)" ]

    - uses: actions/upload-artifact@v3
      with:
        name: windows
        path: ${{ inputs.build-dir }}/windows

    - name: Build Linux application
      shell: bash
      run: |
        mkdir -p ${{ inputs.build-dir }}/linux
        ${{ inputs.godot-executable }} --export-debug Linux --headless
        [ "$(ls -A ${{ inputs.build-dir }}/linux)" ]

    - name: Compress Linux build (to preserve permissions)
      shell: bash
      run: tar -cvf ${{ inputs.build-dir }}/linux/linux.tar -C ${{ inputs.build-dir }}/linux ${{ inputs.app-name }} ${{ inputs.app-name }}.pck

    - uses: actions/upload-artifact@v3
      with:
        name: linux
        path: ${{ inputs.build-dir }}/linux/linux.tar
