name: Validate

on:
  pull_request:
    branches: [ "develop" ]
  workflow_dispatch:

env:
  VERSION_FILE: project.godot
  VERSION_REGEX: config\/version=\"\K[0-9.\-A-z]*
  GODOT_VERSION: 4.1
  GODOT_EXECUTABLE: /Applications/Godot.app/Contents/MacOS/Godot

jobs:
  check-version-bump:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout current branch
        uses: actions/checkout@v3

      - name: Assign new version string
        run: |
          NEW_VERSION=`grep -Po "${{ env.VERSION_REGEX }}" ${{ env.VERSION_FILE }}`
          echo "VERSION=v$NEW_VERSION" >> $GITHUB_OUTPUT
        id: branch

      - name: Checkout base branch
        uses: actions/checkout@v3
        with:
          ref: ${{ github.base_ref }}
      
      - name: Assign old version string
        run: |
          OLD_VERSION=`grep -Po "${{ env.VERSION_REGEX }}" ${{ env.VERSION_FILE }}`
          echo "VERSION=v$OLD_VERSION" >> $GITHUB_OUTPUT
        id: base
      
      - name: Download semver script
        run: |
          curl https://raw.githubusercontent.com/Ariel-Rodriguez/sh-semversion-2/main/semver2.sh -o semver2.sh
          chmod 755 ./semver2.sh
      
      - name: Compare semvers
        run: |
          NEW_VERSION=`echo ${{ steps.branch.outputs.VERSION }}`
          OLD_VERSION=`echo ${{ steps.base.outputs.VERSION }}`
          ./semver2.sh $NEW_VERSION $OLD_VERSION | { read -r var; if [ "$var" -gt 0 ]; then exit 0; else echo "AntiquatedVersionError: downstream version ("$NEW_VERSION") is <= base branch (${{ github.base_ref }}) version ("$OLD_VERSION"). Please update project version to newer semantic version before merging." && exit 1; fi; }

  run-project-validation:
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install Godot
        run: |
          curl -o ./godot.zip "https://downloads.tuxfamily.org/godotengine/$GODOT_VERSION/Godot_v$GODOT_VERSION-stable_macos.universal.zip"
          unzip ./godot.zip
          mv ./Godot.app /Applications/Godot.app

      - name: Open Godot for reimport
        run: $GODOT_EXECUTABLE --editor --headless --quit || true

      - name: Run project validations
        run: $GODOT_EXECUTABLE --script scripts/run_validations.gd --headless
